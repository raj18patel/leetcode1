/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
        int o=1;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            vector<int>v;
            int s=q.size();
            while(s--){
                TreeNode* root=q.front();
                q.pop();
                if(root->left){
                    q.push(root->left);
                    v.push_back(root->left->val);
                }
                if(root->right){
                    q.push(root->right);
                    v.push_back(root->right->val);
                }
            }
            if(o && v.size()!=0){
                int s=q.size();
                int i=v.size()-1;
                while(s--){
                    TreeNode* root=q.front();
                    q.pop();
                    root->val=v[i--];
                    q.push(root);
                }
            }
            o=1-o;
            
        }
        return root;
    }
};