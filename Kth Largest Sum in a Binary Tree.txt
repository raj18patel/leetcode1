/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) {
        if(root==NULL) return -1;
        vector<long long >v;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int s= q.size();
            long long sum=0;
            while(s--){
                TreeNode* f=q.front();
                q.pop();
                sum=sum + (long long)f->val;
                if(f->left) q.push(f->left);
                if(f->right) q.push(f->right);
            }
            v.push_back(sum);
        }
        if(v.size()<k)return -1;
        sort(v.rbegin(),v.rend());
        return v[k-1];
    }
};